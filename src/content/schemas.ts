// Generated by ts-to-zod
import { z } from "zod";

const sectionTypeSchema = z.union([
  z.literal("topic_definition"),
  z.literal("introduction"),
  z.literal("section"),
  z.literal("summary"),
]);

const subSectionSchema = z.object({
  type: z.literal("sub_section"),
  title: z.string(),
  content: z.array(z.string()),
});

const contentSectionSchema = z.object({
  type: z.literal("section"),
  title: z.string(),
  content: z.union([z.array(subSectionSchema), z.array(z.string())]),
});

const tableOfContentSchema = z.array(
  z.object({
    type: z.literal("table_of_content"),
    name: z.string(),
    anchor: z.string(),
    content_type: sectionTypeSchema,
  })
);

const topicDefinitionSchema = z.string();

const introSchema = z.object({
  type: z.literal("intro"),
  content: z.array(z.string()),
});

const summarySchema = z.object({
  type: z.literal("summary"),
  content: z.array(z.string()),
});

export const blogPostSchema = z.object({
  headline: z.string(),
  table_of_content: tableOfContentSchema,
  topic_definition: topicDefinitionSchema.optional(),
  intro: introSchema,
  sections: z.array(contentSectionSchema),
  summary: summarySchema,
});

const instructionSchema = z.object({
  title: z.string(),
  description: z.string().optional(),
  steps: z.array(z.string()),
});

const howToSectionSchema = z.object({
  type: z.literal("how_to_section"),
  title: z.string(),
  content: z.union([z.array(instructionSchema), z.array(z.string())]),
});

const howToListSchema = z.array(
  z.object({
    type: z.literal("how_to_list"),
    name: z.string(),
    anchor: z.string(),
    instructions: z.array(instructionSchema),
  })
);

const overviewSchema = z.object({
  type: z.literal("overview"),
  content: z.array(z.string()),
});

const toolsNeededSchema = z.object({
  type: z.literal("tools_needed"),
  content: z.array(z.string()),
});

const tipsSchema = z.object({
  type: z.literal("tips"),
  content: z.array(z.string()),
});

export const howToGuideSchema = z.object({
  headline: z.string(),
  how_to_list: howToListSchema,
  overview: overviewSchema,
  tools_needed: toolsNeededSchema.optional(),
  sections: z.array(howToSectionSchema),
  tips: tipsSchema.optional(),
});

const listicleItemTypeSchema = z.object({
  title: z.string(),
  description: z.string(),
  imageUrl: z.string().optional(),
});

const listicleIntroSchema = z.object({
  type: z.literal("intro"),
  content: z.array(z.string()),
});

const listicleOutroSchema = z.object({
  type: z.literal("outro"),
  content: z.array(z.string()),
});

export const listiclesSchema = z.object({
  headline: z.string(),
  intro: listicleIntroSchema,
  items: z.array(listicleItemTypeSchema),
  outro: listicleOutroSchema,
});
